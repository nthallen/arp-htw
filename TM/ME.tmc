%{
  /* Meerstetter driver interface */
  #define ME_MAX_DRIVES 7
  #include "meerstetter.h"
  const char *ME_DevStatus_text(unsigned char stat) {
    switch (stat) {
      case 0:  return "Init   ";
      case 1:  return "Ready  ";
      case 2:  return "Run    ";
      case 3:  return "Error  ";
      case 4:  return "BootLdr";
      case 5:  return "Reset  ";
      default: return "*******";
    }
  }
  #define ME_drive(x,y) ME.drive[x].y
%}
TM typedef unsigned char ME_DevStatus_t { text "%7u" ME_DevStatus_text(); }
TM typedef unsigned char ME_Stale_t { text "%3u"; }
TM typedef float ME_Temp_t { text "%7.2f"; }

TM 1 Hz ME_Stale_t ME_Stale;
TM 1 Hz ME_DevStatus_t LTE_DevStatus;
TM 1 Hz ME_Temp_t LTE_Set_T;
TM 1 Hz ME_Temp_t LTE_T;
TM 1 Hz ME_Temp_t LTE_Sink_T;
TM 1 Hz ME_Stale_t LTE_Stale;
TM 1 Hz ME_DevStatus_t LPV_DevStatus;
TM 1 Hz ME_Temp_t LPV_Set_T;
TM 1 Hz ME_Temp_t LPV_T;
TM 1 Hz ME_Temp_t LPV_Sink_T;
TM 1 Hz ME_Stale_t LPV_Stale;
TM 1 Hz ME_DevStatus_t Plate_DevStatus;
TM 1 Hz ME_Temp_t Plate_Set_T;
TM 1 Hz ME_Temp_t Plate_T;
TM 1 Hz ME_Temp_t Plate_Sink_T;
TM 1 Hz ME_Stale_t Plate_Stale;
TM 1 Hz ME_DevStatus_t Cover_DevStatus;
TM 1 Hz ME_Temp_t Cover_Set_T;
TM 1 Hz ME_Temp_t Cover_T;
TM 1 Hz ME_Temp_t Cover_Sink_T;
TM 1 Hz ME_Stale_t Cover_Stale;
TM 1 Hz ME_DevStatus_t Cell_DevStatus;
TM 1 Hz ME_Temp_t Cell_Set_T;
TM 1 Hz ME_Temp_t Cell_T;
TM 1 Hz ME_Temp_t Cell_Sink_T;
TM 1 Hz ME_Stale_t Cell_Stale;
TM 1 Hz ME_DevStatus_t DPV_DevStatus;
TM 1 Hz ME_Temp_t DPV_Set_T;
TM 1 Hz ME_Temp_t DPV_T;
TM 1 Hz ME_Temp_t DPV_Sink_T;
TM 1 Hz ME_Stale_t DPV_Stale;
TM 1 Hz ME_DevStatus_t BubC_DevStatus;
TM 1 Hz ME_Temp_t BubC_Set_T;
TM 1 Hz ME_Temp_t BubC_T;
TM 1 Hz ME_Temp_t BubC_Sink_T;
TM 1 Hz ME_Stale_t BubC_Stale;
TM "Receive" ME 1;

Group ME (ME_Stale, LTE_DevStatus, LTE_T, LTE_Sink_T, LTE_Set_T,
    LPV_DevStatus, LPV_T, LPV_Sink_T, LPV_Set_T, Plate_DevStatus, Plate_T,
    Plate_Sink_T, Plate_Set_T, Cover_DevStatus, Cover_T, Cover_Sink_T,
    Cover_Set_T, Cell_DevStatus, Cell_T, Cell_Sink_T, Cell_Set_T,
    DPV_DevStatus, DPV_T, DPV_Sink_T, DPV_Set_T, BubC_DevStatus, BubC_T,
    BubC_Sink_T, BubC_Set_T) {
  ME_Stale = ME_obj->stale(255);
  LTE_DevStatus = ME_drive(0,DeviceStatus);
  LTE_T = ME_drive(0,ObjectTemp);
  LTE_Sink_T = ME_drive(0,SinkTemp);
  LTE_Set_T = ME_drive(0,TargetObjectTemp);
  LTE_Stale = ME_drive(0,Stale);
  LPV_DevStatus = ME_drive(1,DeviceStatus);
  LPV_T = ME_drive(1,ObjectTemp);
  LPV_Sink_T = ME_drive(1,SinkTemp);
  LPV_Set_T = ME_drive(1,TargetObjectTemp);
  LPV_Stale = ME_drive(1,Stale);
  Plate_DevStatus = ME_drive(2,DeviceStatus);
  Plate_T = ME_drive(2,ObjectTemp);
  Plate_Sink_T = ME_drive(2,SinkTemp);
  Plate_Set_T = ME_drive(2,TargetObjectTemp);
  Plate_Stale = ME_drive(2,Stale);
  Cover_DevStatus = ME_drive(3,DeviceStatus);
  Cover_T = ME_drive(3,ObjectTemp);
  Cover_Sink_T = ME_drive(3,SinkTemp);
  Cover_Set_T = ME_drive(3,TargetObjectTemp);
  Cover_Stale = ME_drive(3,Stale);
  Cell_DevStatus = ME_drive(4,DeviceStatus);
  Cell_T = ME_drive(4,ObjectTemp);
  Cell_Sink_T = ME_drive(4,SinkTemp);
  Cell_Set_T = ME_drive(4,TargetObjectTemp);
  Cell_Stale = ME_drive(4,Stale);
  DPV_DevStatus = ME_drive(5,DeviceStatus);
  DPV_T = ME_drive(5,ObjectTemp);
  DPV_Sink_T = ME_drive(5,SinkTemp);
  DPV_Set_T = ME_drive(5,TargetObjectTemp);
  DPV_Stale = ME_drive(5,Stale);
  BubC_DevStatus = ME_drive(6,DeviceStatus);
  BubC_T = ME_drive(6,ObjectTemp);
  BubC_Sink_T = ME_drive(6,SinkTemp);
  BubC_Set_T = ME_drive(6,TargetObjectTemp);
  BubC_Stale = ME_drive(6,Stale);
  ME_obj->synch();
}
