PARTITION
# PARTITION X: Pinch Valve
#---------------------------------------------------------------
# Summary:
#   Pinch_Valve_Init - Startup. Does nothing
#   Pinch_Valve_Close - Drives to in limit or complains
#   Pinch_Valve_Closed - Where we go after closing valve.
#   Pinch_Valve_Failure - Reports in limit failure and sits
#   Pinch_Valve_Steps_Init - How we get to Pinch_Valve_Steps
#   Pinch_Valve_Steps - Old Pressure-control algo
#   Pinch_Valve_PI_Init - How we get to Pinch_Valve_PI
#   Pinch_Valve_PI - New Pressure-control algo
#   Pinch_Valve_Scan - Perform a scan, then go back to PI
#---------------------------------------------------------------

%{
  double P_sum;
  /* double P_diff; */
  /* double P_set; */

  #define US_CAST(x) ((unsigned short)(x))
  #define MAX_PINCH_STEPS 4000
  #include <math.h> /* for fabs */
%}

#---------------------------------------------------------------
# Initialization is triggered by the mainline, since we have
# to wait for solenoids and steppers power.
#---------------------------------------------------------------
State Pinch_Valve_Init {
  +1 > Set Pinch Valve Speed 1067 Hz
# +1 > Pinch Valve Set Gain Gp 8.0
  +1 > Set Gain Gp for Pinch Valve 8.0
# +1 > Pinch Valve Set Gain Gi 2.0
  +1 > Set Gain Gi for Pinch Valve 2.0
# +1 > Pinch Valve Set Pressure SetPoint 13.9
  +1 > Set Cell Pressure SetPoint 13.9
}

State Pinch_Valve_Close {
  +1 > Drive Pinch Valve in 8000
     Validate Pinch_Valve_Close2;
}

State Pinch_Valve_Close2 {
  depending on (shutdown) { Validate Pinch_Valve_Shutdown; }
     Hold Until ( PVStat & 1 ) or 5
     else Validate Pinch_Valve_Failure;
     > Drive Pinch Valve out 0
     Hold Until ( PVStep == 0 ) or 2
     else { msg( 2, "Pinch Valve step did not reset" ); }
     > Preset Pinch Valve Position to 0
     { if ( Scroll_Pump_S ) Validate Pinch_Valve_Closed; }
 +1  Hold until ( convert(PumpT) < 60 && convert(PMotT) < 60 );
 +2  > Command Scroll_Pump On
 +60 depending on (OFF_GROUND) { Validate Pinch_Valve_Closed; }
     depending on (IN_AIR) { Validate Pinch_Valve_Closed; }
}

State Pinch_Valve_Closed {
  depending on (shutdown) { Validate Pinch_Valve_Shutdown; }
  { if ( convert(PumpT) > 75 || convert(PMotT) > 75 )
      Validate Pinch_Valve_Pump_Overtemp;
  }
  depending on (IN_AIR) {
    if ( convert(CellP) < 20 )
      Validate Pinch_Valve_PI_Init;
  }
}

#---------------------------------------------------------------
# In limit not observed: Retry periodically
#---------------------------------------------------------------
State Pinch_Valve_Failure {
  depending on (shutdown) { Validate Pinch_Valve_Shutdown; }
  { if ( convert(PumpT) > 75 || convert(PMotT) > 75 )
      Validate Pinch_Valve_Pump_Overtemp;
  }

  { msg( 2, "Pinch Valve did not close" ); }
  +1:00 Validate Pinch_Valve_Close;
}

State Pinch_Valve_PI_Init {
    { P_sum = 0; }
    Validate Pinch_Valve_PI;
}

State Pinch_Valve_PI NoLog {
  # depending on (OFF_GROUND) { Validate Pinch_Valve_Close; }
  depending on (ON_GROUND) { Validate Pinch_Valve_Close; }
  { if ( convert(PumpT) > 75 || convert(PMotT) > 75 )
      Validate Pinch_Valve_Pump_Overtemp;
  }
  { double P, Gp, Gi, P_diff, P_set, dstep;
    unsigned short ustep;
    P = convert(CellP);
    P_set = convert(PV_SetP);
    Gp = convert(PV_Gp);
    Gi = convert(PV_Gi);
    P_diff = P_set - P;
    P_sum += P_diff * Gi;
    if ( P_sum > MAX_PINCH_STEPS )
      P_sum = MAX_PINCH_STEPS;
    else if ( P_sum < -MAX_PINCH_STEPS )
      P_sum = -MAX_PINCH_STEPS/Gi;

    dstep = P_diff * Gp + P_sum;
    if (dstep<0) dstep = 0;
    else if (dstep > MAX_PINCH_STEPS) dstep = MAX_PINCH_STEPS;
    ustep = US_CAST(dstep);
    ci_sendfcmd(2, "Drive Pinch Valve To %u\n", ustep);
  }

  "Regulating";
  Hold Until ( PVStat & 1 );
  "Saw Pinch in limit: Make sure it comes off";
  Hold Until ( ! (PVStat & 1) ) or 30
  else Validate Pinch_Valve_Close;
  Validate Pinch_Valve_PI;  
}

State Pinch_Valve_Scan {
    # depending on (OFF_GROUND) { Validate Pinch_Valve_Close; }
    depending on (ON_GROUND) { Validate Pinch_Valve_Close; }
    { if ( convert(PumpT) > 75 || convert(PMotT) > 75 )
        Validate Pinch_Valve_Pump_Overtemp;
    }

    > Drive Pinch Valve In 8000
    Hold Until ( PVStat & 1 ) or 6
    else Validate Pinch_Valve_Close;
    Hold Until ( convert(CellP) < 2. ) or 10;
    > Scan Pinch Valve Out 4000 By 10
    Hold Until ( PVScan != 0 ) or 1;
    Hold Until ( PVScan == 0 || convert(CellP) > 25. ) or 30;
    > Stop Pinch Valve
    Hold Until ( PVScan == 0 ) or 3; 
    > Scan Pinch Valve In 4000 By 10
    Hold Until ( PVScan != 0 ) or 2;
    Hold Until ( PVScan == 0 ) or 100;
    > Drive Pinch Valve Out 0
 +1 { if ( PVStep != 0 ) Validate Pinch_Valve_Close; }
    Validate Pinch_Valve_PI_Init;
}

State Pinch_Valve_Pump_Overtemp {
    { msg( 2, "Pump Over Temperature Shutoff" ); }
 +1 > Drive Pinch Valve in 8000
 +1 > Command Scroll_Pump Off
    Validate Pinch_Valve_Close2;
}

State Pinch_Valve_Shutdown {
    Hold Until ( PVStat & 1 ) or 2;
    > Command Scroll_Pump Off
}
